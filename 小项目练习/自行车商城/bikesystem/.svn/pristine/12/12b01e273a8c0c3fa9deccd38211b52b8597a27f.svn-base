package com.bikesystem.hp.servlet;

import java.io.IOException;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.bikesystem.entity.BikeSell;
import com.bikesystem.entity.SellAddress;
import com.bikesystem.hp.dao.BikeSellDaoImpl;
import com.bikesystem.hp.dao.IBikeSellDao;
import com.bikesystem.hp.service.BikeSellServiceImpl;
import com.bikesystem.hp.service.IBikeSellService;

@WebServlet("/hp/buynow")
public class BuyNowBikeSellServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
	 private	IBikeSellDao sellDao;
	 IBikeSellService ibss;
    public BuyNowBikeSellServlet() {
        super();
        sellDao = new BikeSellDaoImpl();
        ibss= new BikeSellServiceImpl(new BikeSellDaoImpl());
    }


	protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String bikeName=request.getParameter("bikename");
		String shopName = request.getParameter("shopname");
		String id = request.getParameter("said");
		String name = request.getParameter("name");
		String username = request.getParameter("username");//收货人姓名
		//动态添加传入的参数
		try{
				List<BikeSell> bikeSellList = sellDao.querySpecialBikeSell(bikeName, shopName);
				if(bikeSellList!=null){
					request.setAttribute("bikeSellList", bikeSellList);
					//查询该用户的所有地址
					List<SellAddress>SellAddressList = ibss.queryAllBikeSellAddress(name);
					if(SellAddressList!=null){
						request.setAttribute("SellAddressList", SellAddressList);
					}
					//删除已过期的地址
					//int said = Integer.parseInt(id);
				//	ibss.deleteBikeSellAddressById(said);
					
					//根据帐号名 和收货人姓名 》》》选择收货的地址，默认选择第一个
					
		
				}
				request.setAttribute("bikename",bikeName);
				request.setAttribute("shopname",shopName);
				request.setAttribute("bikecount", bikeSellList.get(0).getBikeCount());
				request.setAttribute("sellcount", bikeSellList.get(0).getSellCount());
				request.setAttribute("bikeprice", bikeSellList.get(0).getBikePrice());
				request.setAttribute("imgpath", bikeSellList.get(0).getImgPath());
				request.setAttribute("color", bikeSellList.get(0).getColor());
				request.setAttribute("kindname", bikeSellList.get(0).getKindName());
//	String inputnumber = request.getParameter("inputnumber");
//	int inputnum = Integer.parseInt(inputnumber);
//	if(inputnum<=1){
//		inputnum=1;
//	}
//	request.setAttribute("allbikeprice", inputnum);
	
				}
				catch(Exception e){
						e.printStackTrace();
						return;  
				}

		request.getRequestDispatcher("/WEB-INF/jsp/hp/buyNow.jsp").forward(request, response);
		
		
		
		
	}

}
